load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
load("@bazel_tools//tools/build_defs/pkg:pkg.bzl", "pkg_tar")
load("@io_bazel_rules_docker//go:image.bzl", "go_image")
load("@io_bazel_rules_docker//container:container.bzl", "container_image", "container_push")

# -----------------------------------------------------------------------------

## Build authz server binary
go_binary(
    name = "authz_service",
    embed = [":go_default_library"],
    pure = "off",
    visibility = ["//visibility:public"],
)

go_library(
    name = "go_default_library",
    srcs = [
        "main.go",
    ],
    importpath = "github.com/celsosantos/edge-proxy/cmd/auth_server_v2",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/domains/clientcompany/auth/v2:go_default_library",
        "@com_github_envoyproxy_go_control_plane//envoy/service/auth/v2:go_default_library",
        "@org_golang_google_grpc//:go_default_library",
    ],
)

## Package configurations
pkg_tar(
    name = "key_tar",
    srcs = ["//keys:jwks.json"],
    package_dir = "/etc/keys",
    mode = "0o600",
    owner = "65534.65534",
    visibility = ["//visibility:public"],
)

## Build and push ext-authz container image
go_image(
    name = "authz_service_image_base",
    binary = ":authz_service",
    # Override the base image.
    base = "@go_base_debian10//image",
)

container_image(
    name = "authz_service_image_build",
    base = ":authz_service_image_base",
    tars = [":key_tar"],
    ports = ["9001"],
    stamp = True
)

container_push(
    name = "authz_service_image_push",
    format = "Docker",
    image = ":authz_service_image_build",
    registry = "index.docker.io",
    repository = "celsosantos/edge-proxy",
    tag = "latest",
)

filegroup(
    name = "package-srcs",
    srcs = glob(["**"]),
    tags = ["automanaged"],
    visibility = ["//visibility:private"],
)

filegroup(
    name = "all-srcs",
    srcs = [":package-srcs"],
    tags = ["automanaged"],
    visibility = ["//visibility:private"],
)
